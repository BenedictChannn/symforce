// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace toy_example {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: toy_residual
 *
 * Args:
 *     x: Scalar
 *     y: Scalar
 *
 * Outputs:
 *     res: Scalar
 *     jacobian: (1x1) jacobian of res wrt arg x (1)
 */
template <typename Scalar>
void ToyResidualWithJacobian0(const Scalar x, const Scalar* const y, Scalar* const res = nullptr,
                              Eigen::Matrix<Scalar, 1, 1>* const jacobian = nullptr) {
  // Total ops: 1

  // Input arrays

  // Intermediate terms (1)
  const Scalar _tmp0 = y[static_cast<size_t>(x)];

  // Output terms (2)
  if (res != nullptr) {
    Scalar& _res = (*res);

    _res = _tmp0 * x;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 1, 1>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp0;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace toy_example
