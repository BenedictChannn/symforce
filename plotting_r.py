import numpy as np
import matplotlib.pyplot as plt

# def read_data(file_dir):
#     x_values = []
#     y_values = []
#     with open(file_dir, 'r') as file:
#         for idx, line in enumerate(file):
#             if idx >= 200:
#                 break
#             x, y =  map(float, line.strip().split())
#             x_values.append(x)
#             y_values.append(y)

#     return np.array(x_values), np.array(y_values)

def read_data(file_dir):
    values = []
    with open(file_dir, 'r') as file:
        for idx, line in enumerate(file):
            if idx >= 200:
                break
            x = float(line.strip())
            values.append(x)


    return np.array(values)

def plot_graph(x, y):

    plt.figure(figsize=(8, 6))
    plt.scatter(x, y, c='b', marker='o')
    plt.xlabel('Original residual values')
    plt.ylabel('Autogenerated residual values')
    plt.title('Residual values of stochastic sample (UPENN)')
    plt.grid(True)

    # Calculate the correlation coefficient
    correlation_coefficient = np.corrcoef(x, y)[0, 1]
    plt.text(0.3, 0.9, f'Correlation coefficient: {correlation_coefficient:.2f}',
             transform=plt.gca().transAxes, fontsize=12, ha='center')

    plt.show()


if __name__ == "__main__":
    original_values = "/home/ckengjwe/dso/r_values_rpg1.txt"
    autogenerated_values = "/home/ckengjwe/dso/r_values_rpg2.txt"

    values_x = read_data(original_values)
    values_y = read_data(autogenerated_values)

    plot_graph(values_x, values_y)